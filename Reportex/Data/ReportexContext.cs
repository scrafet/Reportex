// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Reportex.Models;

namespace Reportex.Data
{
    public partial class ReportexContext : DbContext
    {
        public ReportexContext()
        {
        }

        public ReportexContext(DbContextOptions<ReportexContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<Reporte> Reporte { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<RolMenu> RolMenu { get; set; }
        public virtual DbSet<RolReporte> RolReporte { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<UsuarioRol> UsuarioRol { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Menu>(entity =>
            {
                entity.Property(e => e.Denominacion)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Icono)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Modulo)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Orden).HasColumnType("decimal(3, 1)");

                entity.Property(e => e.Referencia).HasColumnType("decimal(3, 1)");

                entity.Property(e => e.Url)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Reporte>(entity =>
            {
                entity.Property(e => e.Denominacion)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.estado)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.url)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Rol>(entity =>
            {
                entity.Property(e => e.Denominacion)
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RolMenu>(entity =>
            {
                entity.HasOne(d => d.Menu)
                    .WithMany(p => p.RolMenu)
                    .HasForeignKey(d => d.MenuId)
                    .HasConstraintName("FK__RolMenu__MenuId__31EC6D26");

                entity.HasOne(d => d.Rol)
                    .WithMany(p => p.RolMenu)
                    .HasForeignKey(d => d.RolId)
                    .HasConstraintName("FK__RolMenu__RolId__30F848ED");
            });

            modelBuilder.Entity<RolReporte>(entity =>
            {
                entity.HasOne(d => d.Reporte)
                    .WithMany(p => p.RolReporte)
                    .HasForeignKey(d => d.ReporteId)
                    .HasConstraintName("FK_Reporte_Rol");

                entity.HasOne(d => d.Rol)
                    .WithMany(p => p.RolReporte)
                    .HasForeignKey(d => d.RolId)
                    .HasConstraintName("FK_Rol_Reporte");
            });

            modelBuilder.Entity<Usuario>(entity =>
            {
                entity.Property(e => e.Clave)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<UsuarioRol>(entity =>
            {
                entity.HasOne(d => d.Rol)
                    .WithMany(p => p.UsuarioRol)
                    .HasForeignKey(d => d.RolId)
                    .HasConstraintName("FK__UsuarioRo__RolId__2C3393D0");

                entity.HasOne(d => d.Usuario)
                    .WithMany(p => p.UsuarioRol)
                    .HasForeignKey(d => d.UsuarioId)
                    .HasConstraintName("FK__UsuarioRo__Usuar__2B3F6F97");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}